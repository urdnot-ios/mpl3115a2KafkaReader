env {
  consumer.group = "connectorGroup"
  consumer.group = ${?KAFKA_CONSUMER_GROUP}
  influx.host = "intel-server-02"
  influx.host = ${?INFLUX_HOST}
  influx.port = 8086
  influx.port = ${?INFLUX_PORT}
  influx.database = "home_sensors"
  influx.database = ${?INFLUX_DATABASE}
  influx.username = ${?INFLUX_USERNAME}
  influx.password = ${?INFLUX_PASSWORD}
  influx.route = "/api/v2/write"
  kafka.topic = "MPL3115A2"
  kafka.topic = ${?KAFKA_TOPIC}
  bootstrap.servers = "pi-server-03:9092,pi-server-04:9092,pi-server-05:9092"
  bootstrap.servers = ${?KAFKA_SERVERS}
  topic.start = "latest"
  topic.start = ${?TOPIC_START}
}
akka {
  loglevel = INFO
  stdout-loglevel = INFO
}
akka.kafka.producer {
  parallelism = 100
  close-timeout = 60s
  use-dispatcher = "akka.kafka.default-dispatcher"
  eos-commit-interval = 100ms
  kafka-clients {
    bootstrap.servers = ${env.bootstrap.servers}
  }
}
akka.kafka.consumer {
  poll-interval = 50ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  commit-time-warning = 1s
  wakeup-timeout = 3s
  max-wakeups = 10
  commit-refresh-interval = infinite
  wakeup-debug = true
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    group.id = ${env.consumer.group}
    enable.auto.commit = false
    auto.offset.reset = ${env.topic.start}
    bootstrap.servers = ${env.bootstrap.servers}
  }
  wait-close-partition = 500ms
  position-timeout = 5s
  offset-for-times-timeout = 5s
  metadata-request-timeout = 5s
}
akka.kafka.committer {
  max-batch = 1000
  max-interval = 10s
}
akka.kafka.default-dispatcher {
  type = "Dispatcher"
  executor = "thread-pool-executor"

  thread-pool-executor {
    fixed-pool-size = 16
  }
}


